name: Deploy

on:
  workflow_dispatch

jobs:
  verify-image-signature:
    name: Manual Deploy with Signature Verification
    runs-on: ubuntu-latest

    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.4.0

      - name: Verify image signature
        env:
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/devops-labs:latest
          GITHUB_ISSUER: https://token.actions.githubusercontent.com
          CERT_IDENTITY: https://github.com/ZainabS-Hub/IATD-DevSecOps--Zainab/.github/workflows/ci-pipeline.yml@refs/heads/main
        run: |
          cosign verify $IMAGE \
            --certificate-identity-regexp "$CERT_IDENTITY" \
            --certificate-oidc-issuer "$GITHUB_ISSUER"

  deploy:
    name: Deploy Container App to Azure
    needs: verify-image-signature
    runs-on: ubuntu-latest

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ secrets.DOCKERHUB_USERNAME }}/devops-labs:latest
          containerAppName: devops-app
          containerAppEnvironment: devops-app-env
          resourceGroup: devsecops-lab
          location: australiaeast
          targetPort: 5000

  submit_results:
    name: Submit Verification URLs and Reports
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI script
        id: token-gen
        uses: azure/CLI@v1
        with:
          azcliversion: 2.63.0
          inlineScript: |
            ACCESS_TOKEN=$(az account get-access-token | jq -r .accessToken)
            echo "::add-mask::$ACCESS_TOKEN"
            echo "azureAccessToken=$ACCESS_TOKEN" >> "$GITHUB_OUTPUT"

      - name: Download ZAP Report
        uses: actions/download-artifact@v4
        with:
          name: zap-report
          path: artifacts/zap-report

      - name: Download Image Scan Report
        uses: actions/download-artifact@v4
        with:
          name: image-report
          path: artifacts/image-report

      - name: Download SBOM
        if: always()
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: sbom

      - name: Upload reports and app URL
        env:
          AZURE_ACCESS_TOKEN: ${{ steps.token-gen.outputs.azureAccessToken }}
        run: |
          FQDN=$(az containerapp show -n devops-app -g devsecops-lab --query properties.configuration.ingress.fqdn -o tsv)
          echo "üåê FQDN: https://$FQDN"

          # Week 1 and 2
          curl -X POST -H "Authorization: Bearer $AZURE_ACCESS_TOKEN" -d "https://$FQDN" https://devsecops-ver.azurewebsites.net/api/week1-app
          curl -X POST -H "Authorization: Bearer $AZURE_ACCESS_TOKEN" -d "https://$FQDN" https://devsecops-ver.azurewebsites.net/api/week2-submit

          # Week 3 - ZAP Report
          if [ -f "artifacts/zap-report/report_json.json" ]; then
            echo "üì§ Uploading ZAP report (Week 3)..."
            curl -X POST -H "Authorization: Bearer $AZURE_ACCESS_TOKEN" \
              --data-binary @artifacts/zap-report/report_json.json \
              https://devsecops-ver.azurewebsites.net/api/week3-zap-report
          else
            echo "‚ö†Ô∏è ZAP report not found. Skipping Week 3 upload."
          fi

          # Week 4 - Image Scan Report
          if [ -f "artifacts/image-report/results.json" ]; then
            echo "üì§ Uploading Image Scan Report (Week 4)..."
            curl -X POST -H "Authorization: Bearer $AZURE_ACCESS_TOKEN" \
              --data-binary @artifacts/image-report/results.json \
              https://devsecops-ver.azurewebsites.net/api/week4-image-report
          else
            echo "‚ö†Ô∏è Image scan report not found. Skipping Week 4 upload."
          fi

          # Week 5 - SBOM
          if [ -f "sbom/sbom_pretty.json" ]; then
            echo "üì§ Uploading SBOM (Week 5)..."
            curl -X POST -H "Authorization: Bearer $AZURE_ACCESS_TOKEN" \
              --data-binary @sbom/sbom_pretty.json \
              https://devsecops-ver.azurewebsites.net/api/week5-sbom
          else
            echo "‚ö†Ô∏è SBOM not found. Skipping Week 5 submission."
          fi
